// Biblioteca gerada pelo arquivo .pio durante compilação.
#include "ws2818b.pio.h"

// Definição do número de LEDs e pino.
#define LED_COUNT 25
#define LED_PIN 7

int getIndex(int x, int y) {
    // Se a linha for par (0, 2, 4), percorremos da esquerda para a direita.
    // Se a linha for ímpar (1, 3), percorremos da direita para a esquerda.
    if (y % 2 == 0) {
        return 24-(y * 5 + x); // Linha par (esquerda para direita).
    } else {
        return 24-(y * 5 + (4 - x)); // Linha ímpar (direita para esquerda).
    }
}

void ANIMAÇÃO1;
  // Inicializa entradas e saídas.
  stdio_init_all();

  // Inicializa matriz de LEDs NeoPixel.
  npInit(LED_PIN);
  npClear();

  // Desenho dos LEDs.

  npWrite(); // Escreve os dados nos LEDs.

  // Não faz mais nada. Loop infinito.
  while (true) {
char tecla - ler_teclado(); //Lê a tecla precionada
    if (tecla == 'C') 
      ANIMAÇÃO1();
    {
int  matriz [5][5][3] = {
    {{0, 0, 0}, {248, 49, 13}, {248, 49, 13}, {248, 49, 13}, {0, 0, 0}},        
    {{248, 49, 13}, {0, 0, 0}, {248, 49, 13}, {0, 0, 0}, {248, 49, 13}},        
    {{248, 49, 13}, {248, 49, 13}, {248, 49, 13}, {248, 49, 13}, {248, 49, 13}},
    {{248, 49, 13}, {248, 49, 13}, {0, 0, 0}, {248, 49, 13}, {248, 49, 13}},    
    {{248, 49, 13}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {248, 49, 13}}};
  for ( int linha  =  0 ; linha  <  5 ; linha ++ ){
  for ( int coluna  =  0 ; coluna  <  5 ; coluna ++ ){
      int  posição  =  getIndex ( linha , coluna );
      npSetLED ( posição , matriz [ coluna ][ linha ][ 0 ], matriz [ coluna ][ linha ][ 1 ], matriz [ coluna ][ linha ][ 2 ]);
    }
  }
 npWrite ();
  sleep_ms(2000);
  npClear();
  } 
  int  matriz2 [5][5][3] = {
    {{11, 44, 245}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {11, 44, 245}},
    {{94, 248, 13}, {11, 44, 245}, {94, 248, 13}, {11, 44, 245}, {94, 248, 13}},
    {{94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}},
    {{94, 248, 13}, {94, 248, 13}, {11, 44, 245}, {94, 248, 13}, {94, 248, 13}},
    {{94, 248, 13}, {11, 44, 245}, {11, 44, 245}, {11, 44, 245}, {94, 248, 13}}};
 for ( int linha  =  0 ; linha  <  5 ; linha ++ ){
  for ( int coluna  =  0 ; coluna  <  5 ; coluna ++ ){
      int  posição  =  getIndex ( linha , coluna );
      npSetLED ( posição , matriz2 [ coluna ][ linha ][ 0 ], matriz2 [ coluna ][ linha ][ 1 ], matriz2 [ coluna ][ linha ][ 2 ]);
    }
  npWrite();
  sleep_ms(2000);
  npClear();
  
  }
  int  matriz3 [5][5][3] = {
    {{0, 0, 0}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {0, 0, 0}},
    {{94, 248, 13}, {0, 0, 0}, {94, 248, 13}, {0, 0, 0}, {94, 248, 13}},
    {{94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}},
    {{94, 248, 13}, {94, 248, 13}, {0, 0, 0}, {94, 248, 13}, {94, 248, 13}},
    {{94, 248, 13}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {94, 248, 13}}};
 for ( int linha  =  0 ; linha  <  5 ; linha ++ ){
  for ( int coluna  =  0 ; coluna  <  5 ; coluna ++ ){
      int  posição  =  getIndex ( linha , coluna );
      npSetLED ( posição , matriz3 [ coluna ][ linha ][ 0 ], matriz3 [ coluna ][ linha ][ 1 ], matriz3 [ coluna ][ linha ][ 2 ]);
    }
npWrite();
  sleep_ms(2000);
  npClear();
 } 
int  matriz4 [5][5][3] = {
    {{11, 44, 245}, {243, 30, 30}, {243, 30, 30}, {243, 30, 30}, {11, 44, 245}},
    {{243, 30, 30}, {11, 44, 245}, {243, 30, 30}, {11, 44, 245}, {243, 30, 30}},
    {{243, 30, 30}, {243, 30, 30}, {243, 30, 30}, {243, 30, 30}, {243, 30, 30}},
    {{243, 30, 30}, {243, 30, 30}, {11, 44, 245}, {243, 30, 30}, {243, 30, 30}},
    {{243, 30, 30}, {11, 44, 245}, {11, 44, 245}, {11, 44, 245}, {243, 30, 30}}};
     for ( int linha  =  0 ; linha  <  5 ; linha ++ ){
  for ( int coluna  =  0 ; coluna  <  5 ; coluna ++ ){
      int  posição  =  getIndex ( linha , coluna );
      npSetLED ( posição , matriz4 [ coluna ][ linha ][ 0 ], matriz4 [ coluna ][ linha ][ 1 ], matriz4 [ coluna ][ linha ][ 2 ]);
    }
npWrite();
  sleep_ms(2000);
  npClear();
  }
int  matriz5 [5][5][3] = {
    {{94, 248, 13}, {11, 44, 245}, {11, 44, 245}, {11, 44, 245}, {94, 248, 13}},
    {{11, 44, 245}, {94, 248, 13}, {11, 44, 245}, {94, 248, 13}, {11, 44, 245}},
    {{11, 44, 245}, {11, 44, 245}, {11, 44, 245}, {11, 44, 245}, {11, 44, 245}},
    {{11, 44, 245}, {11, 44, 245}, {94, 248, 13}, {11, 44, 245}, {11, 44, 245}},
    {{11, 44, 245}, {94, 248, 13}, {94, 248, 13}, {94, 248, 13}, {11, 44, 245}}};
for ( int linha  =  0 ; linha  <  5 ; linha ++ ){
  for ( int coluna  =  0 ; coluna  <  5 ; coluna ++ ){
      int  posição  =  getIndex ( linha , coluna );
      npSetLED ( posição , matriz5 [ coluna ][ linha ][ 0 ], matriz5 [ coluna ][ linha ][ 1 ], matriz5 [ coluna ][ linha ][ 2 ]);
    }
npWrite();
sleep_ms(2000);
}
  npClear();
  }


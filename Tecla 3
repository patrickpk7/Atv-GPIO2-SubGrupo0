#define PIN 0 // Pino conectado à matriz de LEDs
#define NUM_LEDS 25 // Número de LEDs na matriz 5x5
#define ROWS 5
#define COLS 5

Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);

// Definições das cores
#define RED strip.Color(255, 0, 0)
#define GREEN strip.Color(0, 255, 0)
#define BLUE strip.Color(0, 0, 255)
#define BLACK strip.Color(0, 0, 0)

// Função para apagar todos os LEDs
void clearLEDs() {
  for (int i = 0; i < NUM_LEDS; i++) {
    strip.setPixelColor(i, BLACK);
  }
  strip.show();
}

// Função para exibir uma letra na matriz 5x5
void displayLetter(char letter) {
  clearLEDs();

  // Definindo os pixels ligados para cada letra
  // Formato: [ROW][COL]
  uint8_t letters[5][5] = {0};

  switch (letter) {
    case 'A':
      memcpy(letters, (uint8_t[5][5]){
        {0, 1, 1, 1, 0},
        {1, 0, 0, 0, 1},
        {1, 1, 1, 1, 1},
        {1, 0, 0, 0, 1},
        {1, 0, 0, 0, 1}},
        sizeof(letters));
      break;
    case 'L':
      memcpy(letters, (uint8_t[5][5]){
        {1, 0, 0, 0, 0},
        {1, 0, 0, 0, 0},
        {1, 0, 0, 0, 0},
        {1, 0, 0, 0, 0},
        {1, 1, 1, 1, 1}},
        sizeof(letters));
      break;
    case 'I':
      memcpy(letters, (uint8_t[5][5]){
        {0, 1, 1, 1, 0},
        {0, 0, 1, 0, 0},
        {0, 0, 1, 0, 0},
        {0, 0, 1, 0, 0},
        {0, 1, 1, 1, 0}},
        sizeof(letters));
      break;
    case 'N':
      memcpy(letters, (uint8_t[5][5]){
        {1, 0, 0, 0, 1},
        {1, 1, 0, 0, 1},
        {1, 0, 1, 0, 1},
        {1, 0, 0, 1, 1},
        {1, 0, 0, 0, 1}},
        sizeof(letters));
      break;
    case 'E':
      memcpy(letters, (uint8_t[5][5]){
        {1, 1, 1, 1, 1},
        {1, 0, 0, 0, 0},
        {1, 1, 1, 1, 0},
        {1, 0, 0, 0, 0},
        {1, 1, 1, 1, 1}},
        sizeof(letters));
      break;
  }

  // Exibir os LEDs correspondentes à letra
  for (int row = 0; row < ROWS; row++) {
    for (int col = 0; col < COLS; col++) {
      if (letters[row][col] == 1) {
        int index = row * COLS + col;
        strip.setPixelColor(index, GREEN);
      }
    }
  }
  strip.show();
  delay(500); // Duração do frame
}

// Animação para exibir "ALINE"
void displayAnimation() {
  char name[] = "ALINE";
  for (int i = 0; i < strlen(name); i++) {
    displayLetter(name[i]);
  }
  clearLEDs(); // Apagar LEDs após a animação
}

void setup() {
  strip.begin();
  strip.show();
  clearLEDs();
}
